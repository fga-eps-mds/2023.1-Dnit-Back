// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using app.Entidades;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231012200221_UsuarioEmpresa")]
    partial class UsuarioEmpresa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmpresaUsuario", b =>
                {
                    b.Property<string>("EmpresasCnpj")
                        .HasColumnType("character varying(14)")
                        .HasColumnName("CnpjEmpresa");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("integer")
                        .HasColumnName("IdUsuario");

                    b.HasKey("EmpresasCnpj", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioEmpresa", (string)null);
                });

            modelBuilder.Entity("app.Entidades.Empresa", b =>
                {
                    b.Property<string>("Cnpj")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Cnpj");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("app.Entidades.RedefinicaoSenha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RedefinicaoSenha");
                });

            modelBuilder.Entity("app.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EmpresaUsuario", b =>
                {
                    b.HasOne("app.Entidades.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasCnpj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Entidades.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("app.Entidades.RedefinicaoSenha", b =>
                {
                    b.HasOne("app.Entidades.Usuario", "Usuario")
                        .WithMany("RedefinicaoSenha")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("app.Entidades.Usuario", b =>
                {
                    b.Navigation("RedefinicaoSenha");
                });
#pragma warning restore 612, 618
        }
    }
}
